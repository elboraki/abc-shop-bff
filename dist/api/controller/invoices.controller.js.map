{"version":3,"sources":["../../../src/api/controller/invoices.controller.js"],"names":["invoices","id","item","qte","date","Date","findAll","req","res","json","create","body","due","rate","tax","status","err","InvoiceModel","then","invoice","catch","msg","error"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,WAAW,CACb,EAAEC,IAAI,CAAN,EAASC,MAAM,WAAf,EAA4BC,KAAK,CAAjC,EAAoCC,MAAM,IAAIC,IAAJ,EAA1C,EADa,EAEb,EAAEJ,IAAI,CAAN,EAASC,MAAM,eAAf,EAAgCC,KAAK,CAArC,EAAwCC,MAAM,IAAIC,IAAJ,EAA9C,EAFa,EAGb,EAAEJ,IAAI,CAAN,EAASC,MAAM,cAAf,EAA+BC,KAAK,CAApC,EAAuCC,MAAM,IAAIC,IAAJ,EAA7C,EAHa,CAAjB;kBAKe;AAIXC,WAJW,mBAIHC,GAJG,EAIEC,GAJF,EAIO;AACdA,YAAIC,IAAJ,CAAST,QAAT;AACH,KANU;AAQXU,UARW,kBAQJH,GARI,EAQAC,GARA,EAQI;AAAA,wBACwBD,IAAII,IAD5B;AAAA,YACJT,IADI,aACJA,IADI;AAAA,YACCC,GADD,aACCA,GADD;AAAA,YACKC,IADL,aACKA,IADL;AAAA,YACUQ,GADV,aACUA,GADV;AAAA,YACcC,IADd,aACcA,IADd;AAAA,YACmBC,GADnB,aACmBA,GADnB;;AAEX,YAAG,CAACZ,IAAJ,EAAS;AACL,mBAAOM,IAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACO,KAAI,2BAAL,EAArB,CAAP;AACH;AACD,YAAG,CAACZ,IAAJ,EAAS;AACL,mBAAOI,IAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACO,KAAI,2BAAL,EAArB,CAAP;AACH;AACD,YAAG,CAACb,GAAJ,EAAQ;AACJ,mBAAOK,IAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACO,KAAI,0BAAL,EAArB,CAAP;AACH;AACD,YAAG,CAACJ,GAAJ,EAAQ;AACJ,mBAAOJ,IAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACO,KAAI,0BAAL,EAArB,CAAP;AACH;;AAEDC,0BAAaP,MAAb,CAAoB,EAACR,UAAD,EAAMC,QAAN,EAAUC,UAAV,EAAeQ,QAAf,EAAmBC,UAAnB,EAAwBC,QAAxB,EAApB,EAAkDI,IAAlD,CAAuD,mBAAS;AAC5DV,gBAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACU,gBAAD,EAArB;AACH,SAFD,EAEGC,KAFH,CAES,iBAAO;AACZZ,gBAAIO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAACY,KAAIC,KAAL,EAArB;AACH,SAJD;AAKH;AA5BU,C","file":"invoices.controller.js","sourcesContent":["import InvoiceModel from \"../model/invoice.model\";\n\nconst invoices = [\n    { id: 1, item: \"Google X1\", qte: 4, date: new Date() },\n    { id: 2, item: \"Amazon Lambda\", qte: 3, date: new Date() },\n    { id: 9, item: \"Microsoft E1\", qte: 8, date: new Date() }\n];\nexport default {\n\n\n\n    findAll(req, res) {\n        res.json(invoices)\n    },\n\n    create(req,res){\n        const {item,qte,date,due,rate,tax}=req.body;\n        if(!item){\n            return res.status(400).json({err:\"item property is required\"})\n        }\n        if(!date){\n            return res.status(400).json({err:\"date property is required\"})\n        }\n        if(!qte){\n            return res.status(400).json({err:\"qte property is required\"})\n        }\n        if(!due){\n            return res.status(400).json({err:\"due property is required\"})\n        }\n\n        InvoiceModel.create({item,qte,date,due,rate,tax}).then(invoice=>{\n            res.status(200).json({invoice})\n        }).catch(error=>{\n            res.status(500).json({msg:error})\n        })\n    }\n}"]}