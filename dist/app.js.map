{"version":3,"sources":["../src/app.js"],"names":["mongoose","Promise","global","connect","app","PORT","use","express","json","urlencoded","swaggerUi","serve","setup","swaggerDocument","explorer","router","req","res","next","error","Error","status","message","msg","listen","console","log"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACAA,mBAASC,OAAT,GAAiBC,OAAOD,OAAxB;AACAD,mBAASG,OAAT,CAAiB,qCAAjB;AACA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;;AAIAD,IAAIE,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAJ,IAAIE,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;AACAL,IAAIE,GAAJ,CAAQ,sBAAO,UAAP,CAAR;AACAF,IAAIE,GAAJ,CAAQ,UAAR,EAAmBI,2BAAUC,KAA7B,EAAmCD,2BAAUE,KAAV,CAAgBC,iBAAhB,EAAgC;AAC/DC,cAAS;AADsD,CAAhC,CAAnC;AAGAV,IAAIE,GAAJ,CAAQ,MAAR,EAAeS,cAAf;;AAEAX,IAAIE,GAAJ,CAAQ,UAACU,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;;AAEpB,QAAMC,QAAM,IAAIC,KAAJ,EAAZ;AACAD,UAAME,MAAN,GAAa,GAAb;AACAF,UAAMG,OAAN,GAAc,gBAAd;AACAJ,SAAKC,KAAL;AAGH,CARD;AASAf,IAAIE,GAAJ,CAAQ,UAACa,KAAD,EAAOH,GAAP,EAAWC,GAAX,EAAeC,IAAf,EAAsB;AAC1BD,QAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACA,WAAOJ,IAAIT,IAAJ,CAAS;AACZW,eAAM;AACFI,iBAAIJ,MAAMG;AADR;AADM,KAAT,CAAP;AAKH,CAPD;;AAYAlB,IAAIoB,MAAJ,CAAWnB,IAAX,EAAiB,YAAM;AACnBoB,YAAQC,GAAR,CAAY,qBAAZ,EAAmCrB,IAAnC;AACH,CAFD","file":"app.js","sourcesContent":["import express from 'express';\nimport { router } from './config/routes';\nimport mongoose from 'mongoose';\nimport logger from 'morgan'\nimport swaggerUi from 'swagger-ui-express'\nimport swaggerDocument from \"./config/swagger.json\"\nmongoose.Promise=global.Promise\nmongoose.connect(\"mongodb://localhost/invoice-builder\")\nconst app = express();\nconst PORT = 3000;\n\n\n\napp.use(express.json())\napp.use(express.urlencoded())\napp.use(logger('combined'))\napp.use(\"/api-doc\",swaggerUi.serve,swaggerUi.setup(swaggerDocument,{\n    explorer:true\n}))\napp.use(\"/api\",router)\n\napp.use((req,res,next)=>{\n\n    const error=new Error();\n    error.status=400;\n    error.message=\"Customer Error\";\n    next(error);\n\n\n})\napp.use((error,req,res,next)=>{\n    res.status(error.status || 500)\n    return res.json({\n        error:{\n            msg:error.message\n        }\n    })\n})\n\n\n\n\napp.listen(PORT, () => {\n    console.log(\"server is runining \", PORT);\n})"]}